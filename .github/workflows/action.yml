name: CI

run-name: ${{ github.actor }} - ${{ github.event_name }} - ${{ github.sha }}

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

env:
    DB_HOST: ${{ secrets.DB_HOST }}
    DB_USER: ${{ secrets.DB_USER }}
    DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    DB_NAME: ${{ secrets.DB_NAME }}
    DB_DATABASE: ${{ secrets.DB_DATABASE }}
    NODE_ENV: development
jobs:
    upload-artifact:
        name: Push Docker image to Docker Hub
        needs: tests
        runs-on: ubuntu-latest
        steps:
            - name: Check out the repo
              uses: actions/checkout@v4

            - name: Log in to Docker Hub
              uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
              with:
                  images: skelletondude/pipeline-cesi

            - name: Build and push Docker image
              uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

    tests:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: adambirds/docker-compose-action@v1.3.0
              env:
                  DB_HOST: ${{ secrets.DB_HOST }}
                  DB_USER: ${{ secrets.DB_USER }}
                  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
                  DB_NAME: ${{ secrets.DB_NAME }}
                  DB_DATABASE: ${{ secrets.DB_DATABASE }}
                  NODE_ENV: development
              with:
                  compose-file: "./docker-compose.yml"
                  down-flags: "--volumes"
                  services: |
                      api
                      db
                  test-container: api
                  test-command: \
                      "npm run test"
                      "npm run lint"

    security:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@master
            - name: Run Snyk to check for vulnerabilities
              uses: snyk/actions/node@master
              env:
                  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    deploy:
        needs: tests
        runs-on: ubuntu-latest
        steps:
            - uses: webfactory/ssh-agent@v0.8.0
              with:
                  ssh-private-key: ${{ secrets.SSH_KEY }}
            - run: |
                  ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
                  cd ~/final-test-celian-hamon && \
                  git pull && \
                  sh deploy.sh"

    notify:
        needs: deploy
        runs-on: ubuntu-latest
        steps:
            - name: Shoutrrr
              uses: containrrr/shoutrrr-action@v1
              with:
                  url: ${{ secrets.NOTIFICATION_URL }}
                  title: Deployed ${{ github.sha }}
                  message: See changes at ${{ github.event.compare }}.
