name: CI

run-name: ${{ github.actor }} - ${{ github.event_name }} - ${{ github.sha }}

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    upload-artifact:
        name: Push Docker image to Docker Hub
        runs-on: ubuntu-latest
        steps:
            - name: Check out the repo
              uses: actions/checkout@v4

            - name: Log in to Docker Hub
              uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
              with:
                  images: skelletondude/pipeline-cesi

            - name: Build and push Docker image
              uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
              env:
                  DB_HOST: ${{ secrets.DB_HOST }}
                  DB_USER: ${{ secrets.DB_USER }}
                  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
                  DB_NAME: ${{ secrets.DB_NAME }}
                  DB_DATABASE: ${{ secrets.DB_DATABASE }}
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

            - name: Save modules
              uses: actions/cache/save@v3
              with:
                  path: |
                      ~/node_modules
                      ~/package-lock.json
                  key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

    tests:
        name: Run tests
        runs-on: ubuntu-latest
        needs: upload-artifact
        steps:
            - name: Check out the repo
              uses: actions/checkout@v4
            - name: Restore modules
              uses: actions/cache/restore@v3
              with:
                  path: |
                      ~/.cache/Cypress
                      node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

            - name: Docker compose up
              env:
                  DB_HOST: ${{ secrets.DB_HOST }}
                  DB_USER: ${{ secrets.DB_USER }}
                  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
                  DB_NAME: ${{ secrets.DB_NAME }}
                  DB_DATABASE: ${{ secrets.DB_DATABASE }}
              run: |
                  docker compose -f docker-compose.action.yml up -d

            - name: Run tests
              env:
                  DB_HOST: ${{ secrets.DB_HOST }}
                  DB_USER: ${{ secrets.DB_USER }}
                  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
                  DB_NAME: ${{ secrets.DB_NAME }}
                  DB_DATABASE: ${{ secrets.DB_DATABASE }}
              run: |
                  docker compose exec api npm run test
